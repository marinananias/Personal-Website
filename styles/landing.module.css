/* Landing Container */
.subContainer {
  display: flex;
  flex-direction: column;
  align-items: center;
  text-align: center;
  justify-content: top;
  /* Medium devices (desktops, 992px and up) */
  @media (min-width: 900px) {
    flex-direction: row;
    justify-content: space-evenly;
  }
  height: 100vh;
  color: #ec297b;
  background-color: #eae8eb;
  padding: 0 4rem;
}

.logoContainer {
  height: 5rem;
  width: 100vw;
  padding-left: 5rem;
  @media (min-width: 900px) {
    display: none;
  }
}

.logo {
  height: 80%;
  width: auto;
}

/* Text Block */
.greetings {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  @media (min-width: 900px) {
    padding-left: 2rem;
  }
}

.greet1 {
  margin-bottom: 4rem;
  text-shadow: 0.2rem 0.25rem 0rem #f1c061;
  font-size: 6rem;
  /* Large devices (large desktops, 1200px and up) */
  @media (min-width: 1200px) {
    font-size: 8rem;
  }
}

.greet2 {
  margin-bottom: 2rem;
  font-style: italic;
  text-shadow: 0.15rem 0.05rem 0rem #f1c061;
  font-size: 1.8rem;
}

.name {
  text-shadow: 0.2rem 0.1rem 0rem #f1c061;
  font-size: 3.8rem;
}

/* Record Player */
.recordPlayer {
  display: flex;
  position: relative;
  justify-content: center;
  align-items: center;
  height: 35rem;
  width: 35rem;
  margin-top: 2rem;
  @media (min-width: 900px) {
    margin-top: 0;
    margin-right: -1rem;
  }
  /* Large devices (large desktops, 1200px and up) */
  @media (min-width: 1200px) {
    height: 40rem;
    width: 40rem;
  }
}

.vinylBase {
  position: absolute;
  width: 100%;
  height: 100%;
}

.vinyl,
.vinylNeedle {
  position: absolute;
  top: 50%;
  left: 50%;
}

.vinyl {
  width: 57%;
  height: 57%;
  /* "center" an absolutely positioned element 
  both vertically and horizontally within its 
  parent container.  */
  transform: translate(-53%, -50%);
  animation: rotation 5s linear infinite;
}

.vinylNeedle {
  width: 35%;
  height: 50%;
  transform: translate(0.1rem, -63%);
}

@keyframes rotation {
  from {
    transform: translate(-50%, -50%) rotate(0deg);
  }
  to {
    transform: translate(-50%, -50%) rotate(360deg);
  }
}
